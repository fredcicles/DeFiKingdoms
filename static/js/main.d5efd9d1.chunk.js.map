{"version":3,"sources":["helpers/format.helpers.js","constants/realms.js","services/auction.service.js","helpers/prices.helper.js","constants/hero-classes.js","helpers/genes.helpers.js","services/hero.service.js","components/RegressiveSearchPage/functions.js","components/RegressiveSearchPage/LoadingMessage.js","constants/degenking.js","constants/hero-genes.js","components/HeroSnapshot/HeroSnapshotGenes.js","components/HeroSnapshot/HeroSnapshotStatGenes.js","components/HeroSnapshot/HeroSnapshotBack.js","components/HeroCard/HeroStatSection.js","components/HeroCard/HeroStat.js","components/HeroSnapshot/HeroSnapshotFront.js","components/HeroSnapshot/HeroSnapshot.js","components/HeroSnapshot/index.js","components/RegressiveSearchPage/MainHero.js","components/SortFilter/SortFilter.js","components/Icons/Icons.js","components/SearchFormSimple/menu-options.js","components/SearchFormSimple/WalletsForm.js","components/SearchFormSimple/SearchFormSimple.js","components/SummonsMatchList/index.js","components/SummonsMatchList/SummonsMatchList.js","components/RegressiveSearchPage/RegressiveSearchPage.js","components/RegressiveSearchPage/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["PascalCase","word","length","toUpperCase","slice","CamelCase","toLowerCase","REALMS","id","name","NETWORKS","apiv6_endpoint","getHeroDataByAuction","auctionType","network","mainClasses","profession","walletAddresses","take","skip","console","log","options","headers","graphQLClient","GraphQLClient","filter","price","map","address","query","gql","request","data","heroes","SummonsCosts","generation","baseCost","increment","maxCost","calcuateSummonCost","summons","maxSummons","tier","classMutationPairings","mutation","dominantGeneProbabilities","mutationProbabilities","getPotentialDominantGenes","heroGenes","condenseGenes","i","value","genes","reduce","aggregate","current","match","find","existing","getMutationProbability","hero1DominantGene","hero2DominantGene","lookupMutation","mutationProbability","getHeroTier","gene1","gene2","pair","classes","includes","halveGenes","forEach","gene","calculateSummoningGeneProbability","hero1GeneNames","hero2GeneNames","ranks","hero1","hero2","mutations","hero1Genes","hero2Genes","j","push","getMutations","concat","sort","a","b","condenseAndSortGenesByHighestProbability","getProbabilityThatHeroesCanSummonTargetGene","targetClass","_class","getPossibleSummonClasses","parentClass","summonedClass","include","mutationPairing","parentIsMutatable","c","assistingClass","getMutationClass","heroClass","getHeroById","getMainHero","hero","decodeRecessiveGenesAndNormalize","sheerFix","displayId","Number","toString","summonCost","mutationClass","mainClass","sortByProbability","targetProbability","sortByPrice","aPrice","bPrice","fix","mainClassGenes","subClassGenes","toCrystalValeHeroId","heroId","LoadingMessage","heroCount","loaded","loading","message","textToDisplay","Alert","variant","severity","className","CLASS_REV","warrior","knight","thief","archer","priest","wizard","monk","pirate","seer","berserker","paladin","darkKnight","summoner","ninja","shapeshifter","dragoon","sage","dreadKnight","GENE_TITLES","GENE_TYPES","PROFESSIONS","mining","foraging","gardening","fishing","HeroSnapshotGenes","heroid","highlighted","title","type","geneName","defaultProps","StatGene","boldIfNot","HeroSnapshotStatGenes","HeroSnapshotBack","highlights","professionGenes","HeroStatSection","children","HeroStat","main","minor","nameClasses","HeroSnapshotFront","strength","statBoost1","statBoost2","agility","endurance","wisdom","dexterity","vitality","intelligence","luck","rarityClass","JewelIcon","src","alt","CrystalIcon","PriceGroup","label","showIcon","icon","HeroSnapshot","view","grl","Rarity","rarity","level","cp","subClass","originRealm","summonsRemaining","owner","MainHero","SortFilter","onFiltersChange","onSortByChange","onViewToggled","visible","useState","sortBy","setSort","setSummonsRemaining","setMaxSummons","minGen","setMinGen","maxGen","setMaxGen","classMatch","setClassMatch","subclassMatch","setSubclassMatch","professionMatch","setProfessionMatch","includeSummonClass","setIncludeSummonClass","includeAllHeroes","setIncludeAllHeroes","handleFilterChange","target","_summonsRemaining","_maxSummons","_minGen","_maxGen","_classMatch","_subclassMatch","_professionMatch","_includeSummonClass","_includeAllHeroes","checked","Grid","container","justifyContent","item","Switch","defaultChecked","onChange","event","Select","MenuItem","TextField","Checkbox","array","networks","auctionTypeOptions","networkOptions","professionOptions","basic","advanced","elite","exalted","summonClassOptions","ListSubheader","originRealmOptions","WalletsForm","onSave","open","wallets","addresses","setAddresses","useEffect","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","fullWidth","multiline","join","split","DialogActions","Button","onClick","SearchFormSimple","isSearchEnabled","onHeroChange","onSearchCriteriaChange","onSearch","values","onToggle","isWalletsFormVisible","setWalletsFormVisibility","handleHeroIdBlur","handleFormChange","key","canSubmit","summonClass","spacing","fontSize","onBlur","onKeyPress","placeholder","summonProfession","disabled","SummonsMatchList","renderTitle","toFixed","statusMessages","RegressiveSearchPage","filters","setFilters","hasLoaded","setHasLoaded","setHeroes","setHighlights","isLoading","setIsLoading","loadingMessage","setLoadingMessage","mainHero","setMainHero","searchCriteria","setSearchCriteria","searchForm","setSearchForm","setSortBy","setView","handleHeroChange","delay","ms","Promise","res","setTimeout","setRandomLoadingMessage","randomIndex","Math","floor","random","heroNumber","handleSearchCriteriaChange","_mainHero","handleSearch","allHeroes","pageSize","offset","isLastPage","pageOfListings","listedHeroes","heroToAnalyze","rawPrice","classProbability","professionProbability","filteredHeroes","unionBy","sortedHeroes","remainingSummons","sortAndFilterHeroes","Container","maxWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5efd9d1.chunk.js","sourcesContent":["export const PascalCase = word => {\n  if (!word || word.length < 1) return ''\n  return `${word[0].toUpperCase()}${word.slice(1)}`\n}\n\nexport const CamelCase = word => {\n  if (!word || word.length < 1) return ''\n  return `${word[0].toLowerCase()}${word.slice(1)}`\n}\n\nexport const ToPrice = rawPrice => {\n  if (!rawPrice) {\n    return null\n  }\n  const nPrice = Number(rawPrice)\n  const price = nPrice / 1000000000000000000\n  return price\n}\n","export const REALMS = {\n    serendale: {\n        id: 'SER',\n        name: 'Serendale'\n    }, \n    crystalvale: {\n        id: 'CRY',\n        name: 'Crystalvale'\n    }\n}\n\nexport const NETWORKS = {\n    harmony: {\n        id: 'hmy',\n        name: 'Harmony'\n    },\n    dfkchain: {\n        id: 'dfk',\n        name: 'DFK Chain'\n    }\n}\n","// First we need to require our GraphQL Package\nimport { GraphQLClient, gql } from 'graphql-request'\nimport { PascalCase } from '../helpers/format.helpers'\nimport { NETWORKS } from '../constants/realms'\n\n// const apiv5_endpoint = 'http://graph3.defikingdoms.com/subgraphs/name/defikingdoms/apiv5'\nconst apiv6_endpoint = 'https://defi-kingdoms-community-api-gateway-co06z8vi.uc.gateway.dev/graphql'\n\n/*\n * auctionType: sale | assisting\n */\nconst getHeroDataByAuction = async (auctionType = 'sale', network = NETWORKS.harmony.id, mainClasses = [], profession = 'all', walletAddresses = [], take = 50, skip = 0) => {\n  console.log(`Retrieving hero listings ${skip + 1} - ${skip + take} from the Tavern`)\n\n  const options = { headers: { 'Content-Type': 'application/json' } }\n\n  // Create a new GQL Client\n  const graphQLClient = new GraphQLClient(apiv6_endpoint, options)\n\n  let filter = ''\n  let price = ''\n\n  if (auctionType === 'wallet') {\n    filter = `owner_in: [${walletAddresses.map(address => `\"${address}\"`)}]`\n  } else {\n    filter = `${auctionType}Price_not: null\n                  network: \"${network}\"`\n    price = `price: ${auctionType}Price`\n  }\n\n  // If specified, add main class to filter\n  if (mainClasses.length) {\n    filter = `${filter}\n    mainClass_in: [${mainClasses.map(name => `\"${PascalCase(name)}\"`)}]`\n  }\n\n  // If specified, add profession to filter\n  if (profession !== 'all') {\n    filter = `${filter}\n    profession: \"${profession}\"`\n  }\n\n  // Define our query, this will return data for the first 1000 open auctions\n  // 1000 is the max query size for GQL\n  const query = gql`\n\t{\n    heroes(\n      first: ${take}\n      skip: ${skip}\n      where:{\n        ${filter}\n      }\n    )\n    {\n      id\n      owner{\n        name\n      }\n      originRealm\n      network\n      firstName\n      lastName\n      rarity\n      gender\n      generation\n      mainClass\n      subClass\n      level\n      profession\n      fishing\n      foraging\n      gardening\n      mining\n\n      stamina\n\n      summonsRemaining\n      maxSummons\n      summons\n\n      active1\n      active2\n      passive1\n      passive2\n      statBoost1\n      statBoost2\n      statsUnknown1\n      statsUnknown2\n      element\n\n      strength\n      agility\n      endurance\n      wisdom\n      dexterity\n      vitality\n      intelligence\n      luck\n\n      ${price}\n      status\n      hpFullAt\n      mpFullAt\n      statGenesRaw: statGenes\n    }\n  }`\n\n  let data = await graphQLClient.request(query)\n  console.log(`${data.heroes.length} hero listings retrieved from the Tavern`)\n  return data\n}\n\nexport { getHeroDataByAuction }\n","const SummonsCosts = [\n    { generation: 0, baseCost: 6, increment: 2, maxCost: 30 },\n    { generation: 1, baseCost: 16, increment: 2, maxCost: 34 },\n    { generation: 2, baseCost: 26, increment: 2, maxCost: 42 },\n    { generation: 3, baseCost: 36, increment: 2, maxCost: 50 },\n    { generation: 4, baseCost: 46, increment: 2, maxCost: 58 },\n    { generation: 5, baseCost: 56, increment: 2, maxCost: 66 },\n    { generation: 6, baseCost: 66, increment: 2, maxCost: 74 },\n    { generation: 7, baseCost: 76, increment: 2, maxCost: 82 },\n    { generation: 8, baseCost: 86, increment: 2, maxCost: 90 },\n    { generation: 9, baseCost: 96, increment: 2, maxCost: 98 },\n    { generation: 10, baseCost: 106, increment: 2, maxCost: 106 }\n]\n\nexport const calcuateSummonCost = ({ generation, summons, maxSummons }) => {\n    if (generation < 0 || generation > 10) return '?'\n    \n    const tier = SummonsCosts[generation]\n\n    // Gen0s have price cap\n    if (summons >= maxSummons) return tier.maxCost\n\n    return tier.baseCost + (summons * tier.increment)\n}","/**\n * @fileoverview Hero Classes and tiers.\n */\n\nexport const classMutationPairings = [\n  { 'classes': ['warrior', 'knight'], mutation: 'paladin' },\n  { 'classes': ['thief', 'archer'], mutation: 'darkKnight' },\n  { 'classes': ['priest', 'wizard'], mutation: 'summoner' },\n  { 'classes': ['monk', 'pirate'], mutation: 'ninja' },\n  { 'classes': ['seer', 'berserker'], mutation: 'shapeshifter' },\n  { 'classes': ['paladin', 'darkKnight'], mutation: 'dragoon' },\n  { 'classes': ['summoner', 'ninja'], mutation: 'sage' },\n  { 'classes': ['dragoon', 'sage'], mutation: 'dreadKnight' }\n]\n","import { getHeroTier } from '@thanpolas/degenking/src/heroes-helpers/summon-utils.ent'\nimport { classMutationPairings } from '../constants/hero-classes'\n\nconst dominantGeneProbabilities = [0.75, 0.1875, 0.046875, 0.015625]\n\n\nconst mutationProbabilities = {\n    'basic': 0.25,\n    'advanced': 0.25,\n    'elite': 0.125,\n    'exalted': 0.125\n}\n\n\nconst getPotentialDominantGenes = heroGenes => {\n    return condenseGenes(heroGenes.map((name, i) => ({ name, value: dominantGeneProbabilities[i] })))\n}\n\n\n// If the same gene appears in multiple gene slots, combine those in to a single gene/value pair.\n// value equals the sum of the multiple slots\nconst condenseGenes = genes => {\n    return genes.reduce((aggregate, current, i) => {\n        const match = aggregate.find(existing => existing.name === current.name)\n\n        if (match) {\n            match.value += current.value\n            return aggregate\n        } else {\n            return [...aggregate, current]\n        }\n    }, [])\n}\n\n\n//  - Note: this will update hero1 and hero2 if mutations exist\nconst getMutations = (hero1Genes, hero2Genes) => {\n    const mutations = []\n\n    for (let i = 0; i < hero1Genes.length; i++) {\n        for (let j = 0; j < hero2Genes.length; j++) {\n            // 2. Mutable dominant gene\n            const mutation = getMutationProbability(hero1Genes[i], hero2Genes[j])\n\n            // 3. Adjust dominant gene, if mutation is possible\n            if (mutation) {\n                mutations.push(mutation)\n                hero1Genes[i].value -= mutation.value\n                hero2Genes[j].value -= mutation.value\n                break\n            }\n        }\n    }\n\n    return mutations\n}\n\n\nconst getMutationProbability = (hero1DominantGene, hero2DominantGene) => {\n    const mutation = lookupMutation(hero1DominantGene.name, hero2DominantGene.name)\n\n    // If a mutation could occur, then calculate probability\n    if (mutation) {\n        const mutationProbability = mutationProbabilities[getHeroTier(hero1DominantGene.name)]\n\n        return {\n            name: mutation.mutation,\n            value: hero1DominantGene.value * hero2DominantGene.value * mutationProbability\n        }\n    }\n\n    // If no mutation can occur\n    return null\n}\n\n\nconst lookupMutation = (gene1, gene2) => classMutationPairings.find(pair => {\n    const m = gene1 !== gene2 && pair.classes.includes(gene1) && pair.classes.includes(gene2)\n    return m\n})\n\n\n// Divide the probability value for each gene in half\nconst halveGenes = genes => genes.forEach(gene => gene.value = gene.value / 2)\n\nconst condenseAndSortGenesByHighestProbability = (ranks) =>\n    condenseGenes(ranks.hero1.concat(ranks.hero2, ranks.mutations))\n        .sort((a, b) => a.value > b.value ? -1 : a.value < b.value ? 1 : 0)\n\n\n\n\nexport const calculateSummoningGeneProbability = (hero1GeneNames, hero2GeneNames) => {\n\n    // 1. Probabilities for the potential dominant genes\n    const ranks = {\n        hero1: getPotentialDominantGenes(hero1GeneNames),\n        hero2: getPotentialDominantGenes(hero2GeneNames)\n    }\n\n    // 4. Repeat for D, R1, R2, R3\n    // 2. Probabilities for potential mutations\n    // 3. Adjust parent genes, if mutation is possible\n    //  - Note: this will update hero1 and hero2 if mutations is possible\n    ranks.mutations = getMutations(ranks.hero1, ranks.hero2)\n\n    // 5. Halve all of the parent genes\n    halveGenes(ranks.hero1)\n    halveGenes(ranks.hero2)\n\n    // 6. Combine all the genes\n    return condenseAndSortGenesByHighestProbability(ranks)\n}\n\nexport const getProbabilityThatHeroesCanSummonTargetGene = (hero1Genes, hero2Genes, targetClass) => {\n    const classProbabilities = calculateSummoningGeneProbability(hero1Genes, hero2Genes)\n    return classProbabilities.find(_class => _class.name.toLowerCase() === targetClass.toLowerCase())\n}\n\nexport const getPossibleSummonClasses = (parentClass, summonedClass, include) => {\n    const classes = [summonedClass]\n\n    // If the parent and the child are the same class, 2nd parent should be same as 1st parent for highest probability\n    if (parentClass === summonedClass) return classes\n\n    // If the parentClass could mutate to the summonedClass, add the complimentary parent class\n    const mutationPairing = classMutationPairings.find(pair => pair.mutation === summonedClass)\n\n    if (mutationPairing) {\n        const parentIsMutatable = mutationPairing.classes.find(c => c === parentClass)\n        let assistingClass = mutationPairing.classes.find(c => c !== parentClass)\n\n        if (parentIsMutatable)\n            classes.push(assistingClass)\n    }\n\n    return classes\n}\n\n// Retrieves the mutation class for the specified base class\nexport const getMutationClass = heroClass => {\n    return classMutationPairings.find(pair => pair.classes.includes(heroClass))?.mutation\n}\n","// First we need to require our GraphQL Package\nimport { GraphQLClient, gql } from 'graphql-request'\n\nexport const getHeroById = async (id) => {\n    // Then define our endpoint URL\n    //const apiv5_endpoint = 'http://graph3.defikingdoms.com/subgraphs/name/defikingdoms/apiv5'\n\tconst apiv6_endpoint = 'https://defi-kingdoms-community-api-gateway-co06z8vi.uc.gateway.dev/graphql'\n\n    // Create a new GQL Client\n    const graphQLClient = new GraphQLClient(apiv6_endpoint, {\n        headers: {\n            'Content-Type': 'application/json'\n        },\n    })\n\n    // Define our query, this will return data for the first 1000 heroes\n    // 1000 is the max query size for GQL\n    const query = gql`\n\t{\n\t\theroes( \n\t\t\torderBy: numberId\n\t\t\torderDirection: asc\n\t\t\twhere: \n\t\t\t{\n\t\t\t\tid: ${id}\n\t\t   \t}\n\t\t)\n\t\t{\n\t\t\tid\n\t\t\towner{\n\t\t\t  name\n\t\t\t}\n\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\toriginRealm\n\t\t\tnetwork\n\t\t\trarity\n\t\t\tgender\n\t\t\tgeneration\n\t\t\tmainClass\n\t\t\tsubClass\n\t\t\tlevel\n\t\t\tprofession\n\t\t\tfishing\n\t\t\tforaging\n\t\t\tgardening\n\t\t\tmining\n\t\t\n\t\t\tstamina\n\t\t\n\t\t\tsummonsRemaining\n\t\t\tmaxSummons\n\t\t\tsummons\n\t\t\t\n\t\t\tactive1\n\t\t\tactive2\n\t\t\tpassive1\n\t\t\tpassive2\n\t\t\tstatBoost1\n\t\t\tstatBoost2\n\t\t\tstatsUnknown1\n\t\t\tstatsUnknown2\n\t\t\telement\n\t\t\n\t\t\tstrength\n\t\t\tagility\n\t\t\tendurance\n\t\t\twisdom\n\t\t\tdexterity\n\t\t\tvitality\n\t\t\tintelligence\n\t\t\tluck\n\t  \n\t\t\tstatus\n\t\t\thpFullAt\n\t\t\tmpFullAt\n\t\t\tstatGenesRaw: statGenes\n\t\t}\n\t}`\n\n    let data = await graphQLClient.request(query)\n    return data\n}\n","import { decodeRecessiveGenesAndNormalize } from '@thanpolas/degenking/src/heroes-helpers/recessive-genes.ent'\nimport { getHeroById } from '../../services/hero.service'\nimport { calcuateSummonCost } from '../../helpers/prices.helper'\nimport { getMutationClass } from '../../helpers/genes.helpers'\nimport { CamelCase, PascalCase } from '../../helpers/format.helpers'\n\nexport const getMainHero = async id => {\n    const data = await getHeroById(id)\n\n    if (!data.heroes.length) return null\n\n    const hero = decodeRecessiveGenesAndNormalize(data.heroes)[0]\n    sheerFix(hero)\n    hero.displayId = hero.id.length === 13 ? Number(hero.id.slice(1)).toString() : hero.id\n    hero.summonCost = calcuateSummonCost(hero)\n    hero.mutationClass = getMutationClass(CamelCase(hero.mainClass))\n\n    return hero\n}\n\nexport const sortAndFilterHeroes = (heroes, filters, sortBy, mutationClass) => {\n    let sortedHeroes = heroes\n\n    // Skip filtering and sorting if there are no records\n    if (!heroes.length) return sortedHeroes\n\n    const summonClass = PascalCase(mutationClass)\n\n    // Filter based on filter criteria\n    sortedHeroes = sortedHeroes.filter(hero => {\n        const remainingSummons = !filters.summonsRemaining || Number(hero.summonsRemaining) >= Number(filters.summonsRemaining)\n        const maxSummons = !filters.maxSummons || Number(hero.maxSummons) >= Number(filters.maxSummons)\n        const minGen = !filters.minGen || filters.minGen === '' || Number(hero.generation) >= Number(filters.minGen)\n        const maxGen = !filters.maxGen || filters.maxGen === '' || Number(hero.generation) <= Number(filters.maxGen)\n        const mainClass = filters.includeSummonClass || hero.mainClass !== summonClass\n        const classMatch = !filters.classMatch || hero.mainClassGenes[0] === hero.mainClassGenes[1]\n        const subclassMatch = !filters.subclassMatch || hero.subClassGenes[0] === hero.subClassGenes[1]\n        const professionMatch = !filters.professionMatch || hero.professionGenes[0] === hero.professionGenes[1]\n\n        return maxSummons &&\n            remainingSummons &&\n            minGen &&\n            maxGen &&\n            mainClass &&\n            classMatch &&\n            subclassMatch &&\n            professionMatch\n    })\n\n    // Sort heroes by probability or price\n    switch (sortBy) {\n        case 'probability':\n            return sortedHeroes.sort(sortByProbability)\n        case 'price':\n            return sortedHeroes.sort(sortByPrice)\n        default:\n            return sortedHeroes\n    }\n}\n\nconst sortByProbability = (a, b) => {\n    return a.targetProbability > b.targetProbability ?\n        -1 :\n        a.targetProbability < b.targetProbability ? 1 : 0\n}\n\nconst sortByPrice = (a, b) => {\n    const aPrice = a.price + (a.auctionType === 'sale' ? 0 : a.summonCost)\n    const bPrice = b.price + (b.auctionType === 'sale' ? 0 : b.summonCost)\n    return aPrice > bPrice ? 1 : aPrice < bPrice ? -1 : 0\n}\n\nexport const sheerFix = (hero) => {\n    const fix = (genes) => {\n        for (let i = 0; i < genes.length; i++) {\n            if (genes[i] === 'sheer') genes[i] = 'seer'\n        }\n    }\n\n    fix(hero.mainClassGenes)\n    fix(hero.subClassGenes)\n}\n\nexport const toCrystalValeHeroId = heroId => `${'1000000000000'.slice(0, 13 - heroId.length)}${heroId}`\n","import Alert from '@mui/material/Alert'\n\nconst LoadingMessage = ({ heroCount, loaded, loading, message }) => {\n    const textToDisplay = loading ? message : loaded && !heroCount ? 'No Heroes Found' : null\n    return textToDisplay ? (\n        <Alert variant='outlined' severity='success' className='loading-message'>\n            {textToDisplay}\n        </Alert>\n    ) : null\n}\n\nexport default LoadingMessage\n","/**\n * @fileoverview Hero Classes and tiers.\n */\n\n export const CLASS_REV = {\n    warrior: 'Warrior',\n    knight: 'Knight',\n    thief: 'Thief',\n    archer: 'Archer',\n    priest: 'Priest',\n    wizard: 'Wizard',\n    monk: 'Monk',\n    pirate: 'Pirate',\n    seer: 'Seer',\n    berserker: 'Berserker',\n    paladin: 'Paladin',\n    darkKnight: 'DarkKnight',\n    summoner: 'Summoner',\n    ninja: 'Ninja',\n    shapeshifter: 'Shapeshifter',\n    dragoon: 'Dragoon',\n    sage: 'Sage',\n    dreadKnight: 'DreadKnight',\n}\n\nexport const basicClasses = [\n    'warrior',\n    'knight',\n    'thief',\n    'archer',\n    'priest',\n    'wizard',\n    'monk',\n    'pirate',\n    'seer',\n    'berserker'\n  ]\n\nexport const advancedClasses = ['paladin', 'darkKnight', 'summoner', 'ninja', 'shapeshifter']\n\nexport const eliteClasses = ['dragoon', 'sage']\n\nexport const exaltedClasses = ['dreadKnight']\n\nexport const PROFESSIONS_AR = ['mining', 'gardening', 'foraging', 'fishing']\n","export const GENE_TITLES = ['D', 'R1', 'R2', 'R3']\n\nexport const GENE_TYPES = {\n    Classes: 0,\n    SubClasses: 1,\n    Professions: 2\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CLASS_REV } from '../../constants/degenking'\nimport { GENE_TITLES, GENE_TYPES } from '../../constants/hero-genes'\n\nconst PROFESSIONS = {\n    mining: 'Mining',\n    foraging: 'Foraging',\n    gardening: 'Gardening',\n    fishing: 'Fishing'\n}\n\nconst HeroSnapshotGenes = ({ className, genes, heroid, highlighted, title, type }) => {\n    return <div className={`hero-snapshot-genes${className ? ` ${className}` : ''}`}>\n        <div className='title'>{title}</div>\n        {genes.map((gene, i) => {\n            // Get the nice name for the gene\n            let geneName = type === GENE_TYPES.Classes ? CLASS_REV[gene] : type === GENE_TYPES.Professions ? PROFESSIONS[gene] : gene\n            // Back-up, in case gene is not in the appropriate array\n            if (!geneName) geneName = gene\n\n            return (\n                <div key={`${heroid}-${GENE_TITLES[i]}`} className='gene'>\n                    <div className='label'>{GENE_TITLES[i]}:</div>\n                    <div className={`value${highlighted && highlighted.includes(gene) ? ' highlighted' : ''}`}>{geneName}</div>\n                </div>\n            )\n        })}\n    </div>\n}\n\nHeroSnapshotGenes.propTypes = {\n    className: PropTypes.string,\n    genes: PropTypes.array,\n    heroid: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    highlighted: PropTypes.array,\n    title: PropTypes.string,\n    type: PropTypes.number\n}\n\nHeroSnapshotGenes.defaultProps = {\n    type: 0\n}\n\nexport default HeroSnapshotGenes\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst StatGene = ({ boldIfNot, value }) => {\n    let className = 'value'\n\n    if (boldIfNot && !value.toString().toLowerCase().includes(boldIfNot)) {\n         className += ' highlighted'\n    }\n\n    return (\n        <div className='gene'>\n            <div className={className}>{value}</div>\n        </div>\n    )\n}\n\nconst HeroSnapshotStatGenes = ({ className, genes }) => {\n    // const statsUnknown1 = genes['statsUnknown1'] ? genes['statsUnknown1'] : genes.statGenes['statsUnknown1']\n    // const statsUnknown2 = genes['statsUnknown2'] ? genes['statsUnknown2'] : genes.statGenes['statsUnknown2']\n    // const element = genes['element'] ? genes['element'] : genes.statGenes['element']\n\n    return (\n        <>\n            <div className={`hero-snapshot-genes${className ? ` ${className}` : ''}`}>\n                <div className='title'>Active</div>\n                <StatGene value={genes['active1']} boldIfNot='basic' />\n                <StatGene value={genes['active2']} boldIfNot='basic' />\n            </div>\n            <div className={`hero-snapshot-genes${className ? ` ${className}` : ''}`}>\n                <div className='title'>Passive</div>\n                <StatGene value={genes['passive1']} boldIfNot='basic' />\n                <StatGene value={genes['passive2']} boldIfNot='basic' />\n            </div>\n            {/* <div className={`hero-snapshot-genes${className ? ` ${className}` : ''}`}>\n                <div className='title'>Unknown</div>\n                <StatGene value={statsUnknown1} />\n                <StatGene value={statsUnknown2} />\n            </div>\n            <div className={`hero-snapshot-genes${className ? ` ${className}` : ''}`}>\n                <div className='title'>Element</div>\n                <StatGene value={element} />\n            </div> */}\n        </>\n    )\n}\n\nHeroSnapshotStatGenes.propTypes = {\n    className: PropTypes.string,\n    genes: PropTypes.object\n}\n\nHeroSnapshotStatGenes.defaultProps = {\n}\n\nexport default HeroSnapshotStatGenes\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport HeroSnapshotGenes from './HeroSnapshotGenes'\nimport HeroSnapshotStatGenes from './HeroSnapshotStatGenes'\nimport { GENE_TYPES } from '../../constants/hero-genes'\n\nconst HeroSnapshotBack = ({ highlights, hero }) => {\n    return (\n        <>\n            <div className='hero-snapshot-genes-section'>\n                <HeroSnapshotGenes genes={hero.mainClassGenes} heroid={hero.id} title='Class' highlighted={highlights.mainClass} />\n                <HeroSnapshotGenes genes={hero.subClassGenes} heroid={hero.id} title='SubClass' />\n                <HeroSnapshotGenes genes={hero.professionGenes} heroid={hero.id} title='Profession' type={GENE_TYPES.Professions} highlighted={highlights.profession} />\n            </div>\n            <div className='hero-snapshot-stat-genes-section'>\n                <HeroSnapshotStatGenes genes={hero} />\n            </div>\n        </>\n    )\n}\n\nHeroSnapshotBack.propTypes = {\n    highlights: PropTypes.object\n}\n\nHeroSnapshotBack.defaultProps = {\n    highlights: {}\n}\n\nexport default HeroSnapshotBack\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst HeroStatSection = ({ children, className, title }) => {\n    return (\n        <div className={`hero-stat-section ${className}`}>\n            <div className='title'>{title}</div>\n            <div className='stat-group'>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nHeroStatSection.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string\n}\n\nHeroStatSection.defaultProps = {\n    className: 'hero-stat-section'\n}\n\nexport default HeroStatSection\n","import React from 'react'\n\nconst HeroStat = ({ name, value, main, minor }) => {\n    const nameClasses = `name${main && minor ? ' main-minor' : main ? ' main' : minor ? ' minor' : ''}`\n\n    return (\n        <div className='hero-stat'>\n            <div className={nameClasses}>\n                {name}\n            </div>\n            <div className='value'>\n                {value}\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default HeroStat","import React from 'react'\nimport HeroStatSection from '../HeroCard/HeroStatSection'\nimport HeroStat from '../HeroCard/HeroStat'\n\nconst HeroSnapshotFront = ({ hero }) => {\n    return (\n        <>\n            <HeroStatSection title='Stats'>\n                <HeroStat name='STR' value={hero.strength} main={hero.statBoost1 === 'STR'} minor={hero.statBoost2 === 'STR'} />\n                <HeroStat name='AGI' value={hero.agility} main={hero.statBoost1 === 'AGI'} minor={hero.statBoost2 === 'AGI'} />\n                <HeroStat name='END' value={hero.endurance} main={hero.statBoost1 === 'END'} minor={hero.statBoost2 === 'END'} />\n                <HeroStat name='WIS' value={hero.wisdom} main={hero.statBoost1 === 'WIS'} minor={hero.statBoost2 === 'WIS'} />\n                <HeroStat name='DEX' value={hero.dexterity} main={hero.statBoost1 === 'DEX'} minor={hero.statBoost2 === 'DEX'} />\n                <HeroStat name='VIT' value={hero.vitality} main={hero.statBoost1 === 'VIT'} minor={hero.statBoost2 === 'VIT'} />\n                <HeroStat name='INT' value={hero.intelligence} main={hero.statBoost1 === 'INT'} minor={hero.statBoost2 === 'INT'} />\n                <HeroStat name='LCK' value={hero.luck} main={hero.statBoost1 === 'LCK'} minor={hero.statBoost2 === 'LCK'} />\n            </HeroStatSection>\n            <HeroStatSection className='profession-stat-section' title='Professions'>\n                <HeroStat name='Mining' value={hero.mining} main={hero.profession === 'mining'} />\n                <HeroStat name='Fishing' value={hero.fishing} main={hero.profession === 'fishing'} />\n                <HeroStat name='Gardening' value={hero.gardening} main={hero.profession === 'gardening'} />\n                <HeroStat name='Foraging' value={hero.foraging} main={hero.profession === 'foraging'} />\n            </HeroStatSection>\n        </>\n    )\n}\n\nexport default HeroSnapshotFront","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Rarity } from '@thanpolas/degenking/src/constants/constants.const'\nimport { NETWORKS, REALMS } from '../../constants/realms'\nimport { PascalCase } from '../../helpers/format.helpers'\nimport HeroSnapshotBack from './HeroSnapshotBack'\nimport HeroSnapshotFront from './HeroSnapshotFront'\nimport './styles.css'\n\nconst rarityClass = ['common', 'uncommon', 'rare', 'legendary', 'mythic']\nconst JewelIcon = () => (<img src='/jewel50.png' className='jewel-icon' alt='Jewel' />)\nconst CrystalIcon = () => (<img src='/crystal100.png' className='jewel-icon' alt='Jewel' />)\n\nconst PriceGroup = ({ label, showIcon, network, value }) => {\n    const icon = network === NETWORKS.harmony.id ? <JewelIcon /> : <CrystalIcon />\n    return (\n        <div className='price-group'>\n            <div className='price-value'>\n                {value}{showIcon && icon}\n            </div>\n            <div className='price-label'>\n                {label}\n            </div>\n        </div>\n    )\n}\n\nconst HeroSnapshot = ({ highlights, hero, title, view }) => {\n    const grl = `Gen ${hero.generation} | ${Rarity[hero.rarity]} | Level ${hero.level}`\n    const cp = `${PascalCase(hero.mainClass)} / ${PascalCase(hero.subClass)} | ${PascalCase(hero.profession)}`\n    const icon = hero.originRealm === REALMS.serendale.id ? <JewelIcon /> : <CrystalIcon />\n\n    return (\n        <div className={`hero-snapshot ${rarityClass[hero.rarity]}`}>\n            <div className='hero-snapshot-title'>\n                {title}\n            </div>\n            <div className='hero-snapshot-name'>\n                Hero {icon} #{hero.displayId}\n            </div>\n            <div className='hero-snapshot-grc'>\n                {grl}\n            </div>\n            <div className='hero-snapshot-grc'>\n                {cp}\n            </div>\n            {view === 'front' && <HeroSnapshotFront hero={hero} />}\n            {view === 'back' && <HeroSnapshotBack hero={hero} highlights={highlights} />}\n            <div className='hero-snapshot-pricing'>\n                {hero.price && (<PriceGroup label={<>{`${hero.auctionType === 'sale' ? 'Purchase' : 'Rental'}`}<br />Price</>} value={hero.price} showIcon network={hero.network} />)}\n                <PriceGroup label={<>Summon<br />Cost</>} value={hero.summonCost} showIcon network={hero.network} />\n                {hero.auctionType === 'assisting' && <PriceGroup label={<>Total<br />Cost</>} value={Number(hero.price) + Number(hero.summonCost)} showIcon network={hero.network} />}\n                <PriceGroup label={hero.generation === 0 ? <>Total<br />Summons</> : <>Summons<br />Remaining</>} value={`${hero.maxSummons === 11 ? hero.summons : hero.summonsRemaining}/${hero.maxSummons === 11 ? '∞' : hero.maxSummons}`} />\n            </div>\n            <div className='hero-snapshot-owner'>\n                Owned by: {hero.owner ? hero.owner.name : 'UNAVAILABLE'}\n            </div>\n        </div>\n    )\n}\n\nHeroSnapshot.propTypes = {\n    hero: PropTypes.object,\n    highlights: PropTypes.object,\n    view: PropTypes.string\n}\n\nHeroSnapshot.defaultProps = {\n    view: 'front'\n}\n\nexport default HeroSnapshot\n","import HeroSnapshot from './HeroSnapshot'\nexport default HeroSnapshot\n","import HeroSnapshot from '../HeroSnapshot'\n\nconst MainHero = ({ hero, view }) => {\n    return hero ?\n        (<div className='main-hero'>\n            <HeroSnapshot hero={hero} title='Main Hero' view={view} />\n        </div>) :\n        null\n}\n\nexport default MainHero\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Checkbox from '@mui/material/Checkbox'\nimport Grid from '@mui/material/Grid'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select from '@mui/material/Select'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport './SortFilter.css'\n\nconst SortFilter = ({ onFiltersChange, onSortByChange, onViewToggled, visible }) => {\n    const [sortBy, setSort] = useState('probability')\n    const [summonsRemaining, setSummonsRemaining] = useState('')\n    const [maxSummons, setMaxSummons] = useState('')\n    const [minGen, setMinGen] = useState('0')\n    const [maxGen, setMaxGen] = useState('14')\n    const [classMatch, setClassMatch] = useState(false)\n    const [subclassMatch, setSubclassMatch] = useState(false)\n    const [professionMatch, setProfessionMatch] = useState(false)\n    const [includeSummonClass, setIncludeSummonClass] = useState(false)\n    const [includeAllHeroes, setIncludeAllHeroes] = useState(false)\n\n\n    const handleFilterChange = ({ target }) => {\n        let _summonsRemaining = summonsRemaining\n        let _maxSummons = maxSummons\n        let _minGen = minGen\n        let _maxGen = maxGen\n        let _classMatch = classMatch\n        let _subclassMatch = subclassMatch\n        let _professionMatch = professionMatch\n        let _includeSummonClass = includeSummonClass\n        let _includeAllHeroes = includeAllHeroes\n\n        switch (target.name) {\n            case 'summonsRemaining':\n                _summonsRemaining = target.value\n                setSummonsRemaining(target.value)\n                break;\n            case 'maxSummons':\n                _maxSummons = target.value\n                setMaxSummons(target.value)\n                break;\n            case 'minGen':\n                _minGen = target.value\n                setMinGen(target.value)\n                break;\n            case 'maxGen':\n                _maxGen = target.value\n                setMaxGen(target.value)\n                break;\n            case 'classMatch':\n                _classMatch = target.checked\n                setClassMatch(_classMatch)\n                console.log(`class set to ${_classMatch}`)\n                break;\n            case 'subclassMatch':\n                _subclassMatch = target.checked\n                setSubclassMatch(_subclassMatch)\n                break;\n            case 'professionMatch':\n                _professionMatch = target.checked\n                setProfessionMatch(_professionMatch)\n                break;\n            case 'includeSummonClass':\n                _includeSummonClass = target.checked\n                setIncludeSummonClass(_includeSummonClass)\n                break;\n            case 'includeAllHeroes':\n                _includeAllHeroes = target.checked\n                setIncludeAllHeroes(_includeAllHeroes)\n                break;\n            default:\n                console.log('unknown search filter selected')\n        }\n\n        onFiltersChange({\n            summonsRemaining: _summonsRemaining,\n            maxSummons: _maxSummons,\n            minGen: _minGen,\n            maxGen: _maxGen,\n            classMatch: _classMatch,\n            subclassMatch: _subclassMatch,\n            professionMatch: _professionMatch,\n            includeSummonClass: _includeSummonClass,\n            includeAllHeroes: _includeAllHeroes\n        })\n    }\n\n\n    const handleViewToggled = (event) => {\n        onViewToggled(event.target.checked)\n    }\n\n\n    const handleSortByChange = ({ target }) => {\n        setSort(target.value)\n        onSortByChange(target.value)\n    }\n\n\n    if (!visible)\n        return null\n\n    return (\n        <Grid container className='sort-filter' justifyContent='center'>\n            <Grid item className='section'>\n                <Switch defaultChecked={false} onChange={handleViewToggled} />\n                Flip Cards\n            </Grid>\n            <Grid item className='section'>\n                <div className='sort-label'>\n                    Sort By:\n                </div>\n                <div className='sort-value'>\n                    <Select\n                        label='Sort by'\n                        name='sort-by'\n                        className='sort-by-selecter'\n                        value={sortBy}\n                        variant='standard'\n                        onChange={handleSortByChange}\n                    >\n                        <MenuItem key='probability' value='probability'>Probability</MenuItem>\n                        <MenuItem key='price' value='price'>Price</MenuItem>\n                    </Select>\n                </div>\n            </Grid>\n            <Grid item className='section'>\n                <div className='filter-label'>\n                    Filters:\n                </div>\n                <div className='filter-selections'>\n                    Summons\n                    <div className='filter-selecters'>\n                        <div className='filter-selecter'>\n                            Remaining\n                            <TextField\n                                name='summonsRemaining'\n                                value={summonsRemaining}\n                                variant='standard'\n                                onChange={handleFilterChange}\n                                type='number'\n                            />\n                        </div>\n                        <div className='filter-selecter'>\n                            Max\n                            <TextField\n                                name='maxSummons'\n                                value={maxSummons}\n                                variant='standard'\n                                onChange={handleFilterChange}\n                                type='number'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className='filter-selections'>\n                    Generation\n                    <div className='filter-selecters'>\n                        <div className='filter-selecter'>\n                            Min\n                            <TextField\n                                name='minGen'\n                                value={minGen}\n                                variant='standard'\n                                onChange={handleFilterChange}\n                                type='number'\n                            />\n                        </div>\n                        <div className='filter-selecter'>\n                            Max\n                            <TextField\n                                name='maxGen'\n                                value={maxGen}\n                                variant='standard'\n                                onChange={handleFilterChange}\n                                type='number'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className='gene-match'>\n                    <div className='heading'>D/R1 Gene Match</div>\n                    <div className='options'>\n                        <div className='option'>\n                            <Checkbox\n                                name='classMatch'\n                                value={classMatch}\n                                onChange={handleFilterChange}\n                                className='gene-checkbox'\n                            />\n                            <div className='label'>Class</div>\n                        </div>\n                        <div className='option'>\n                            <Checkbox\n                                name='subclassMatch'\n                                value={subclassMatch}\n                                onChange={handleFilterChange}\n                                className='gene-checkbox'\n                            />\n                            <div className='label'>Subclass</div>\n                        </div>\n                        <div className='option'>\n                            <Checkbox\n                                name='professionMatch'\n                                value={professionMatch}\n                                onChange={handleFilterChange}\n                                className='gene-checkbox'\n                            />\n                            <div className='label'>Profession</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='gene-match'>\n                    <div className='heading'>Include</div>\n                    <div className='options'>\n                        <div className='option'>\n                            <Checkbox\n                                name='includeSummonClass'\n                                value={includeSummonClass}\n                                onChange={handleFilterChange}\n                                className='gene-checkbox'\n                            />\n                            <div className='label'>Summon Class</div>\n                        </div>\n{/*                         <div className='option'>\n                            <Checkbox\n                                name='includeAllHeroes'\n                                value={includeAllHeroes}\n                                onChange={handleFilterChange}\n                                className='gene-checkbox'\n                            />\n                            <div className='label'>All Heroes</div>\n                        </div>\n */}                    </div>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n\nSortFilter.propTypes = {\n    onFiltersChange: PropTypes.func,\n    onSortByChange: PropTypes.func,\n    onViewToggled: PropTypes.func,\n    visible: PropTypes.bool,\n}\n\nSortFilter.defaultProps = {\n    onFiltersChange: () => { },\n    onSortByChange: () => { },\n    onViewToggled: () => { },\n    visible: false,\n}\n\nexport default SortFilter\n","export const CrystalIcon = () => (<img src='/crystal100.png' className='jewel-icon' alt='Jewel' />)\nexport const JewelIcon = () => (<img src='/jewel50.png' className='jewel-icon' alt='Jewel' />)\n","import { NETWORKS, REALMS } from '../../constants/realms'\nimport { CLASS_REV, basicClasses, advancedClasses, eliteClasses, exaltedClasses, PROFESSIONS_AR as professions } from '../../constants/degenking'\nimport { CrystalIcon, JewelIcon } from '../Icons'\nimport ListSubheader from '@mui/material/ListSubheader'\nimport MenuItem from '@mui/material/MenuItem'\n\nconst options = (array) => {\n    return array.map(item => {\n        const label = typeof (item) === 'string' ? item : item.label\n        const value = typeof (item) === 'string' ? item : item.value\n        return <MenuItem key={value} value={value}>{label}</MenuItem>\n    })\n}\n\nconst auctionTypes = [\n    { label: 'sale', value: 'sale' },\n    { label: 'rent', value: 'assisting' },\n    { label: 'wallet', value: 'wallet' }\n]\n\nconst networks = [\n    { label: 'Serendale', value: NETWORKS.harmony.id },\n    { label: 'Crystalvale', value: NETWORKS.dfkchain.id }\n]\n\nconst professionAllOption = { label: 'any profession', value: 'all' }\n\nexport const auctionTypeOptions = options(auctionTypes)\n\nexport const networkOptions = options(networks)\n\nexport const professionOptions = options([professionAllOption, ...professions])\n\n\n// Renders the list of options for the Summon Class dropdown\nconst basic = basicClasses\n    .sort()\n    .map(name => (<MenuItem key={name} value={name}>{CLASS_REV[name]}</MenuItem>))\n\nconst advanced = advancedClasses\n    .sort()\n    .map(name => (<MenuItem key={name} value={name}>{CLASS_REV[name]}</MenuItem>))\n\nconst elite = eliteClasses\n    .sort()\n    .map(name => (<MenuItem key={name} value={name}>{CLASS_REV[name]}</MenuItem>))\n\nconst exalted = exaltedClasses\n    .sort()\n    .map(name => (<MenuItem key={name} value={name}>{CLASS_REV[name]}</MenuItem>))\n\nexport const summonClassOptions = [\n    (<ListSubheader key='basic'>Basic Classes</ListSubheader>),\n    ...basic,\n    (<ListSubheader key='advanced'>Advanced Classes</ListSubheader>),\n    ...advanced,\n    (<ListSubheader key='elite'>Elite Classes</ListSubheader>),\n    ...elite,\n    (<ListSubheader key='exalted'>Exalted Classes</ListSubheader>),\n    ...exalted\n]\n\nexport const originRealmOptions = [\n    <MenuItem key={REALMS.serendale.id} value={REALMS.serendale.id}>\n        <JewelIcon />\n    </MenuItem>,\n    <MenuItem key={REALMS.crystalvale.id} value={REALMS.crystalvale.id}>\n        <CrystalIcon />\n    </MenuItem>\n]\n","import Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TextField from '@mui/material/TextField'\nimport { useEffect, useState } from 'react'\n\nconst WalletsForm = ({ name, onSave, open, wallets }) => {\n\n    const [addresses, setAddresses] = useState([])\n\n    // Set the wallet addresses when updated externally\n    useEffect(() => {\n        setAddresses(wallets)\n    }, [wallets])\n\n    const handleClear = () => {\n        setAddresses([])\n    }\n\n    const handleSave = () => {\n        onSave && onSave({ target: { name: name, value: addresses } })\n    }\n\n    const handleWalletsChange = ({ target }) => {\n        const value = target.value.split('\\n')\n        setAddresses(value)\n    }\n\n    return (\n        <Dialog open={open} onClose={onSave}>\n            <DialogTitle>Wallet Addresses</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Enter each wallet address on it's own line and click Save when done.  Click clear to remove all wallet addresses.\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Wallet Address\"\n                    fullWidth\n                    multiline\n                    variant=\"filled\"\n                    value={addresses ? addresses.join('\\n') : ''}\n                    onChange={handleWalletsChange}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClear}>Clear</Button>\n                <Button onClick={handleSave}>Save</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default WalletsForm\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n    auctionTypeOptions,\n    networkOptions,\n    originRealmOptions,\n    professionOptions,\n    summonClassOptions\n} from './menu-options'\n\nimport Button from '@mui/material/Button'\nimport Grid from '@mui/material/Grid'\nimport SearchIcon from '@mui/icons-material/PersonSearch'\nimport Select from '@mui/material/Select'\nimport TextField from '@mui/material/TextField'\nimport WalletIcon from '@mui/icons-material/AccountBalanceWalletOutlined'\nimport WalletsForm from './WalletsForm'\n\nimport './styles.css'\n\nconst SearchFormSimple = ({ isSearchEnabled, onHeroChange, onSearchCriteriaChange, onSearch, onToggle, values }) => {\n    const [isWalletsFormVisible, setWalletsFormVisibility] = useState(false)\n\n    // Loads the selected hero\n    const handleHeroIdBlur = () => {\n        onHeroChange && onHeroChange(values.originRealm)\n    }\n\n    // Loads the selected hero when the enter key is pressed inside the HeroId text box\n    const handleHeroIdEnter = (event) => {\n        if (event.key === 'Enter') {\n            handleHeroIdBlur()\n        }\n    }\n\n    // Saves changes to the form data\n    const handleFormChange = ({ target }) => {\n        onSearchCriteriaChange({ key: target.name, value: target.value })\n    }\n\n    // Saves changes to the selected wallet addresses\n    const handleWalletsChange = event  => {\n        handleFormChange(event)\n        setWalletsFormVisibility(false)\n    }\n\n    // Displays a popup for entering wallet addresses\n    const showWalletsForm = () => {\n        setWalletsFormVisibility(true)\n    }\n\n    const canSubmit = isSearchEnabled && values.summonClass\n\n    return (\n        <>\n            <Grid container className='search-form-simple' justifyContent='center' spacing={0}>\n                <Grid item>\n                    Find me heroes for\n                    <Select\n                        label='Auction Type'\n                        name='auctionType'\n                        className='auction-type-selecter'\n                        value={values.auctionType}\n                        variant='standard'\n                        onChange={handleFormChange}\n                    >\n                        {auctionTypeOptions}\n                    </Select>\n                </Grid>\n                {values.auctionType === 'wallet' && (\n                    <>\n                        <Grid item>\n                            <Button\n                                className='wallet-button'\n                                onClick={showWalletsForm}\n                            >\n                                {`(${values.walletAddresses.length} addresses selected)`}\n                                <WalletIcon\n                                    className='wallet-form-icon'\n                                    fontSize='small'\n                                />\n                            </Button>\n                        </Grid>\n                        <WalletsForm\n                            name='walletAddresses'\n                            open={isWalletsFormVisible}\n                            onSave={handleWalletsChange}\n                            wallets={values.walletAddresses}\n                        />\n                    </>\n                )}\n                {values.auctionType !== 'wallet' && (\n                    <Grid item>\n                        in the\n                        <Select\n                            className='network-selecter'\n                            name='network'\n                            onChange={handleFormChange}\n                            value={values.network}\n                            variant='standard'\n                        >\n                            {networkOptions}\n                        </Select>\n                        tavern,\n                    </Grid>\n                )}\n                <Grid item className='hero-container'>\n                    who can match with hero\n                    <Select\n                        className='origin-realm-selecter'\n                        name='originRealm'\n                        onChange={handleFormChange}\n                        value={values.originRealm}\n                        variant='standard'\n                    >\n                        {originRealmOptions}\n                    </Select>\n                    #\n                    <TextField\n                        className='hero-id-selecter'\n                        name='heroId'\n                        onBlur={handleHeroIdBlur}\n                        onChange={handleFormChange}\n                        onKeyPress={handleHeroIdEnter}\n                        placeholder='hero id'\n                        value={values.heroId}\n                        variant='standard'\n                    />\n                </Grid>\n                <Grid item>\n                    to summon a\n                    <Select\n                        className='summoned-class-selecter'\n                        label='Class to be summoned'\n                        name='summonClass'\n                        onChange={handleFormChange}\n                        value={values.summonClass}\n                        variant='standard'\n                    >\n                        {summonClassOptions}\n                    </Select>\n                </Grid>\n                <Grid item>\n                    for\n                    <Select\n                        className='summoned-profession-selecter'\n                        label='Profession to be summoned'\n                        name='summonProfession'\n                        onChange={handleFormChange}\n                        value={values.summonProfession}\n                        variant='standard'\n                    >\n                        {professionOptions}\n                    </Select>\n                </Grid>\n                <Grid item>\n                    <Button\n                        disabled={!canSubmit}\n                        onClick={onSearch}\n                        variant='contained'\n                    >\n                        <SearchIcon />\n                    </Button>\n                    {/* <a href=\"#\" className='search-form-toggle' onClick={onToggle}>Advanced Search</a> */}\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nSearchFormSimple.propTypes = {\n    isSearchEnabled: PropTypes.bool,\n    onHeroChange: PropTypes.func,\n    onSearch: PropTypes.func,\n    onSearchCriteriaChange: PropTypes.func,\n    onToggle: PropTypes.func,\n    values: PropTypes.object\n}\n\nSearchFormSimple.defaultProps = {\n    isSearchEnabled: false,\n    onToggle: () => { }\n}\n\nexport default SearchFormSimple\n","import SummonsMatchList from './SummonsMatchList'\nexport default SummonsMatchList\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport HeroSnapshot from '../HeroSnapshot/HeroSnapshot'\n\n// Displays a list of Heroes who are compatible with the Summons Match\nconst SummonsMatchList = ({ highlights, heroes, view }) => {\n    const renderTitle = (hero) => `${(hero.targetProbability * 100).toFixed(2)}% probability`\n    return heroes.length ?\n        heroes.map(hero => <HeroSnapshot key={hero.id} hero={hero} title={renderTitle(hero)} view={view} highlights={highlights} />) :\n        null\n}\n\nSummonsMatchList.propTypes = {\n    highlights: PropTypes.object,\n    heroes: PropTypes.array,\n    view: PropTypes.string\n}\n\nexport default SummonsMatchList\n","import React, { useEffect, useState } from 'react'\nimport unionBy from 'lodash/unionBy'\nimport { decodeRecessiveGenesAndNormalize } from '@thanpolas/degenking/src/heroes-helpers/recessive-genes.ent'\nimport { getHeroDataByAuction } from '../../services/auction.service'\nimport { calcuateSummonCost } from '../../helpers/prices.helper'\nimport { getProbabilityThatHeroesCanSummonTargetGene, getPossibleSummonClasses } from '../../helpers/genes.helpers'\nimport { CamelCase, ToPrice } from '../../helpers/format.helpers'\nimport { getMainHero, sheerFix, sortAndFilterHeroes, toCrystalValeHeroId } from './functions'\nimport { NETWORKS, REALMS } from '../../constants/realms'\n\nimport Container from '@mui/material/Container'\nimport LoadingMessage from './LoadingMessage'\nimport MainHero from './MainHero'\nimport SortFilter from '../SortFilter/SortFilter'\nimport SearchFormSimple from '../SearchFormSimple/SearchFormSimple'\nimport SummonsMatchList from '../SummonsMatchList'\n\nimport './styles.css'\n\nconst statusMessages = [\n    'Now there is an interesting fellow.',\n    'Oh, the Tavern has Perch Porter on draft.',\n    'Chatting with Agent Selina.  She is such a sweetheart!',\n    'Are those wings on her back, or she just harpy to see me?',\n    'Woah, big guy!  Careful with those horns!'\n]\n\nconst RegressiveSearchPage = () => {\n    const [filters, setFilters] = useState({})\n    const [hasLoaded, setHasLoaded] = useState(false)\n    const [heroes, setHeroes] = useState([])\n    const [highlights, setHighlights] = useState()\n    const [isLoading, setIsLoading] = useState(false)\n    const [loadingMessage, setLoadingMessage] = useState('')\n    const [mainHero, setMainHero] = useState()\n    const [searchCriteria, setSearchCriteria] = useState({\n        auctionType: 'assisting',\n        heroId: '',\n        network: NETWORKS.harmony.id,\n        originRealm: REALMS.serendale.id,\n        summonClass: '',\n        summonProfession: 'all',\n        walletAddresses: []\n    })\n    const [searchForm, setSearchForm] = useState('simple')\n    const [sortBy, setSortBy] = useState('probability')\n    const [view, setView] = useState('back')\n\n    // Update the hero if the network changes\n    useEffect(() => {\n        searchCriteria.heroId && handleHeroChange()\n        // eslint-disable-next-line\n    }, [searchCriteria.originRealm])\n\n    const delay = ms => new Promise(res => setTimeout(res, ms))\n\n    const setRandomLoadingMessage = () => {\n        const randomIndex = Math.floor(Math.random() * statusMessages.length)\n        setLoadingMessage(statusMessages[randomIndex])\n    }\n\n    // Updates filters\n    const handleFiltersChange = filters => {\n        setFilters(filters)\n    }\n\n    // Looks up the selected Hero\n    const handleHeroChange = async () => {\n        const heroNumber = searchCriteria.heroId\n        const heroId = searchCriteria.originRealm === REALMS.serendale.id\n            ? heroNumber\n            : toCrystalValeHeroId(heroNumber)\n\n        if (heroId && (!mainHero || mainHero.id !== heroId)) {\n            // Clear currently displayed main and matching heroes\n            setHeroes([])\n            setMainHero()\n            handleSearchCriteriaChange({ key: 'summonClass', value: '' })\n            setLoadingMessage('')\n\n            // Retrieve the main hero from DFK\n            const _mainHero = await getMainHero(heroId)\n\n            if (_mainHero) {\n                setMainHero(_mainHero)\n\n                // Set a default for the class to summon based on the selected hero\n                _mainHero.mutationClass &&\n                    handleSearchCriteriaChange({ key: 'summonClass', value: _mainHero.mutationClass })\n            } else {\n                setLoadingMessage('Hero not found.')\n                setIsLoading(true)\n            }\n        }\n    }\n\n    // Updates search criteria\n    const handleSearchCriteriaChange = ({ key, value }) => {\n        setSearchCriteria({ ...searchCriteria, [key]: value })\n    }\n\n    // Updates sorting options\n    const handleSortByChange = value => {\n        setSortBy(value)\n    }\n\n    // Creates a new search for the specified search criteria\n    const handleSearch = async () => {\n        setHeroes([])\n        setIsLoading(true)\n        setRandomLoadingMessage()\n\n        let allHeroes = []\n        const pageSize = 50\n        let offset = 0\n        let isLastPage = false\n\n        // Set the highlights\n        const classes = getPossibleSummonClasses(CamelCase(mainHero.mainClass), searchCriteria.summonClass)\n        setHighlights({ mainClass: classes, profession: [searchCriteria.summonProfession] })\n\n        while (!isLastPage) {\n            // Retrieve a page of hero listings from tavern\n            const pageOfListings = await getHeroDataByAuction(searchCriteria.auctionType, searchCriteria.network, classes, searchCriteria.summonProfession, searchCriteria.walletAddresses, pageSize, offset)\n            const listedHeroes = decodeRecessiveGenesAndNormalize(pageOfListings.heroes)\n\n            // Analyze each of the heroes in auction\n            for (let i = 0; i < listedHeroes.length; i++) {\n                const heroToAnalyze = listedHeroes[i]\n                sheerFix(heroToAnalyze)\n                heroToAnalyze.displayId = heroToAnalyze.id.length === 13 ? Number(heroToAnalyze.id.slice(1)).toString() : heroToAnalyze.id\n                heroToAnalyze.auctionType = searchCriteria.auctionType\n                heroToAnalyze.summonCost = calcuateSummonCost(heroToAnalyze)\n                heroToAnalyze.price = ToPrice(heroToAnalyze.price)\n                const classProbability = getProbabilityThatHeroesCanSummonTargetGene(mainHero.mainClassGenes, heroToAnalyze.mainClassGenes, searchCriteria.summonClass)\n\n                // Apply the probability based on search criteria\n                if (searchCriteria.summonProfession === 'all') {\n                    heroToAnalyze.targetProbability = classProbability ? classProbability.value : 0\n                } else {\n                    const professionProbability = getProbabilityThatHeroesCanSummonTargetGene(mainHero.professionGenes, heroToAnalyze.professionGenes, searchCriteria.summonProfession)\n                    heroToAnalyze.targetProbability = classProbability && professionProbability ? classProbability.value * professionProbability.value : 0\n                }\n            }\n\n            // Remove any heroes who cannot be used to summon the target class\n            const filteredHeroes = listedHeroes.filter(hero => hero.targetProbability > 0)\n\n            console.log(`${allHeroes.length} existing heroes`)\n            console.log(`adding ${filteredHeroes.length} new heroes`)\n\n            // Merge and sort heroes by highest to lowest probability of summoning target class\n            allHeroes = unionBy(allHeroes, filteredHeroes, 'id')\n\n            console.log(`now ${allHeroes.length} total heroes`)\n\n            // Update state to display heroes\n            setHeroes(allHeroes)\n            setRandomLoadingMessage()\n\n            offset += pageSize\n            isLastPage = pageOfListings.heroes.length === 0\n\n            await delay(1000)\n\n            // ONLY LOAD 1 PAGE FOR TESTING\n            // isLastPage = offset > 200\n        }\n\n        setIsLoading(false)\n        setHasLoaded(true)\n    }\n\n    // Changes which search form is displayed\n    const handleSearchFormToggle = () => {\n        setSearchForm(searchForm === 'simple' ? 'advanced' : 'simple')\n    }\n\n    // Change the current view\n    const handleViewToggled = (checked) => {\n        setView(checked ? 'front' : 'back')\n    }\n\n    const sortedHeroes = mainHero ? sortAndFilterHeroes(heroes, filters, sortBy, mainHero.mutationClass) : []\n\n    return (\n        <Container maxWidth='xl'>\n            <SearchFormSimple\n                isSearchEnabled={!!mainHero && !isLoading}\n                onHeroChange={handleHeroChange}\n                onSearch={handleSearch}\n                onSearchCriteriaChange={handleSearchCriteriaChange}\n                onToggle={handleSearchFormToggle}\n                values={searchCriteria} />\n\n            <SortFilter\n                auctionType={searchCriteria.auctionType}\n                onFiltersChange={handleFiltersChange}\n                onSortByChange={handleSortByChange}\n                onViewToggled={handleViewToggled}\n                visible={!!mainHero} />\n\n            <LoadingMessage\n                heroCount={heroes.length}\n                loading={isLoading}\n                loaded={hasLoaded}\n                message={loadingMessage} />\n\n            <div className='hero-list'>\n                <MainHero\n                    hero={mainHero}\n                    view={view} />\n                <SummonsMatchList\n                    heroes={sortedHeroes}\n                    view={view}\n                    highlights={highlights} />\n            </div>\n        </Container>\n    )\n}\n\nexport default RegressiveSearchPage\n","import RegressiveSearchPage from './RegressiveSearchPage'\nexport default RegressiveSearchPage\n","import React from 'react'\nimport RegressiveSearchPage from '../RegressiveSearchPage'\nimport './styles.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <main className=\"App-main\">\n        <RegressiveSearchPage />\n      </main>\n    </div >\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}